// Versions

def versions = [:]

def gradleVersions = [:]
gradleVersions.build = "3.4.0"
gradleVersions.wrapper = "5.4"
versions.gradle = gradleVersions

def kotlinVersions = [:]
kotlinVersions.core = "1.3.21"
kotlinVersions.coroutines = "1.0.1"
versions.kotlin = kotlinVersions

versions.dagger = "2.16"
versions.gson = "2.8.5"

def retrofitVersions = [:]
retrofitVersions.core = "2.4.0"
retrofitVersions.coroutines = "0.9.2"
versions.retrofit = retrofitVersions

versions.material = "1.0.0"
def androidXVersions = [:]
androidXVersions.appCompat = "1.0.2"
androidXVersions.constraintLayout = "2.0.0-alpha4"
androidXVersions.recyclerView = "1.0.0"
androidXVersions.cardView = "1.0.0"
androidXVersions.coreKtx = "1.0.1"
androidXVersions.fragment = "1.1.0-alpha06"
androidXVersions.room = "2.1.0-alpha04"
androidXVersions.architecture = "2.0.0"
androidXVersions.lifecycle = "2.0.0"
androidXVersions.navigation = "2.0.0"
versions.androidX = androidXVersions

versions.picasso = "2.71828"
versions.glide = "4.8.0"

def testingVersions = [:]
testingVersions.jUnit = "4.12"
testingVersions.mockito = "2.22.0"
testingVersions.dexOpener = "2.0.2"
testingVersions.testRunner = "1.1.0-alpha4"
testingVersions.espresso = "3.1.0-alpha4"
versions.testing = testingVersions

// Build

static def addRepositories(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
    handler.jcenter()
    handler.maven { url 'https://jitpack.io' }
}

ext.addRepositories = this.&addRepositories

def dependencies = [:]

def buildDependencies = [:]

def gradleDependencies = [:]
gradleDependencies.android = "com.android.tools.build:gradle:$versions.gradle.build"
gradleDependencies.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin.core"
gradleDependencies.navigationSafeArgs = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidX.navigation"
buildDependencies.gradle = gradleDependencies

def buildTools = [:]
buildTools.buildTools = "28.0.3"
buildTools.targetSdk = 28
buildTools.minSdk = 21
buildDependencies.tools = buildTools

def buildVersions = [:]
buildVersions.code = 1
buildVersions.name = "1.0"
buildDependencies.versions = buildVersions

dependencies.build = buildDependencies

def appDependencies = [:]

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin.core"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin.core"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin.coroutines"
appDependencies.kotlin = kotlin

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.androidSupport = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.androidCompiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
appDependencies.dagger = dagger

appDependencies.gson = "com.google.code.gson:gson:$versions.gson"

def retrofit = [:]
retrofit.base = "com.squareup.retrofit2:retrofit:$versions.retrofit.core"
retrofit.gsonConverter = "com.squareup.retrofit2:converter-gson:$versions.retrofit.core"
retrofit.scalarsConverter = "com.squareup.retrofit2:converter-scalars:$versions.retrofit.core"
retrofit.coroutines = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit.coroutines"
appDependencies.retrofit = retrofit

appDependencies.material = "com.google.android.material:material:$versions.material"
def androidX = [:]

androidX.appCompat = "androidx.appcompat:appcompat:$versions.androidX.appCompat"
androidX.constraintLayout = "androidx.constraintlayout:constraintlayout:$versions.androidX.constraintLayout"
androidX.recyclerView = "androidx.recyclerview:recyclerview:$versions.androidX.recyclerView"
androidX.recyclerViewSelection = "androidx.recyclerview:recyclerview-selection:$versions.androidX.recyclerView"
androidX.cardView = "androidx.cardview:cardview:$versions.androidX.cardView"
androidX.coreKtx = "androidx.core:core-ktx:$versions.androidX.coreKtx"

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:$versions.androidX.fragment"
fragment.runtimeKtx = "androidx.fragment:fragment-ktx:$versions.androidX.fragment"
fragment.testing = "androidx.fragment:fragment-testing:$versions.androidX.fragment"
androidX.fragment = fragment

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.androidX.room"
room.coroutines = "androidx.room:room-coroutines:$versions.androidX.room"
room.compiler = "androidx.room:room-compiler:$versions.androidX.room"
room.testing = "androidx.room:room-testing:$versions.androidX.room"
androidX.room = room

def architecture = [:]
architecture.common = "androidx.arch.core:core-common:$versions.androidX.architecture"
architecture.runtime = "androidx.arch.core:core-runtime:$versions.androidX.architecture"
architecture.testing = "androidx.arch.core:core-testing:$versions.androidX.architecture"
androidX.architecture = architecture

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.androidX.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidX.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidX.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidX.lifecycle"
androidX.lifecycle = lifecycle

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.androidX.navigation"
navigation.runtimeKtx = "androidx.navigation:navigation-runtime-ktx:$versions.androidX.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.androidX.navigation"
navigation.fragmentKtx = "androidx.navigation:navigation-fragment-ktx:$versions.androidX.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.androidX.navigation"
navigation.uiKtx = "androidx.navigation:navigation-ui-ktx:$versions.androidX.navigation"
androidX.navigation = navigation

appDependencies.androidX = androidX

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
appDependencies.glide = glide

appDependencies.picasso = "com.squareup.picasso:picasso:$versions.picasso"

dependencies.app = appDependencies

def testingDependencies = [:]

testingDependencies.jUnit = "junit:junit:$versions.testing.jUnit"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.testing.mockito"
mockito.inline = "org.mockito:mockito-inline:$versions.testing.mockito"
mockito.android = "org.mockito:mockito-android:$versions.testing.mockito"
testingDependencies.mockito = mockito

testingDependencies.dexOpener = "com.github.tmurakami:dexopener:$versions.testing.dexOpener"
testingDependencies.testRunner = "androidx.test:runner:$versions.testing.testRunner"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.testing.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.testing.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.testing.espresso"
testingDependencies.espresso = espresso

dependencies.testing = testingDependencies

ext.deps = dependencies
